<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.std.forum.dao.IPostDAO">
	<resultMap id="post_DB_Result" type="post">
		<result column="code" property="code" />
		<result column="title" property="title" />
		<result column="content" property="content" />
		<result column="pic" property="pic" />
		<result column="publisher" property="publisher" />
		
		<result column="nickname" property="nickname" />
		<result column="photo" property="photo" />
		<result column="publish_datetime" property="publishDatetime" />
		<result column="approver" property="approver" />
		<result column="approve_datetime" property="approveDatetime" />
		
		<result column="approve_note" property="approveNote" />
		<result column="status" property="status" />
		<result column="location" property="location" />
		<result column="order_no" property="orderNo" />
		<result column="plate_code" property="plateCode" />
		
		<result column="is_lock" property="isLock" />
		<result column="valid_datetime_start" property="validDatetimeStart" />
		<result column="valid_datetime_end" property="validDatetimeEnd" />
		<result column="remark" property="remark" />
		<result column="total_read_times" property="totalReadTimes" />
		<result column="plate_name" property="plateName" />
	</resultMap>
	<sql id="where_condition">
		<trim prefix="WHERE" prefixOverrides="AND | OR">
			<if test="code != null and code != '' ">
				AND t.code = #{code}
			</if>
			<if test="title != null and title != '' ">
		        AND t.title = #{title}
			</if>
			<if test="location != null and location != '' ">
		        AND t.location = #{location}
			</if>
			<if test="keyword != null and keyword != '' ">
		        AND (t.title like "%"#{keyword}"%" or t.content like "%"#{keyword}"%")
			</if>
			<choose>
				 <when test='status == "CC"'>
				 	AND t.status in ('C1','C2')
				 </when>
				 <when test='status == "BD"'>
				 	AND t.status in ('B','D')
				 </when>
				 <otherwise>
					 <if test='status != null and status != ""'>
		        		AND t.status = #{status}
					</if>
				 </otherwise>
			</choose>
			<if test="publisher != null and publisher != '' ">
		        AND t.publisher = #{publisher}
			</if>
			<if test="publishDatetimeStart != null and publishDatetimeStart != '' ">
				<![CDATA[AND t.publish_datetime >= #{publishDatetimeStart}]]>
			</if>
			<if test="publishDatetimeEnd != null and publishDatetimeEnd != '' ">
				<![CDATA[AND t.publish_datetime <= #{publishDatetimeEnd}]]>
			</if>
			<if test="plateCode != null and plateCode != '' ">
		        AND t.plate_code = #{plateCode}
			</if>
			<if test="siteCode != null and siteCode != '' ">
		        AND tp.site_code = #{siteCode}
			</if>
			<if test="type != null and type != '' ">
		        AND tpt.type = #{type}
			</if>
			<if test="talker != null and talker != '' ">
		        AND tpt.talker = #{talker}
			</if>
			<if test="location != null and location != '' ">
		        AND t.location = #{location}
			</if>
		</trim>
	</sql>
	
	<select id="select_post" parameterType="post" resultMap="post_DB_Result">
		SELECT 
		DISTINCT
		t.code
		,t.title
		,t.content
		,t.pic
		,t.publisher
		
		,(select nickname from ${userDB}.tstd_user tu where tu.user_id=t.publisher) as nickname
		,(select photo from ${userDB}.tstd_user_ext tue where tue.user_id=t.publisher) as photo
		,t.publish_datetime
		,t.approver
		,t.approve_datetime
		
		,t.approve_note
		,t.status
		,t.location
		,t.order_no
		,t.plate_code
		
		,t.is_lock
		,t.valid_datetime_start
		,t.valid_datetime_end
		,t.remark
		,tp.name as plate_name
		,(select count(1) from tforum_post_talk tpt where tpt.type = '5' and tpt.post_code = t.code) as total_read_times
		FROM
		tforum_post t inner join tforum_plate tp on t.plate_code = tp.code left join tforum_post_talk tpt on t.code = tpt.post_code 
		<include refid="where_condition" />
		ORDER BY t.code DESC	
	</select>

	<select id="select_post_count" parameterType="post"
		resultType="java.lang.Long">
		SELECT count(*) from (SELECT DISTINCT t.code FROM tforum_post t inner join tforum_plate tp on t.plate_code = tp.code left join tforum_post_talk tpt on t.code = tpt.post_code
		<include refid="where_condition" />) as post
	</select>
	
	<select id="select_post1_count" parameterType="post"
		resultType="java.lang.Long">
		SELECT count(1) FROM tforum_post where plate_code = #{plateCode}
	</select>

	<insert id="insert_post" parameterType="post">
		INSERT INTO
		tforum_post(
		code
		,title
		,content
		,pic
		,status
		
		,plate_code
		,publisher
		,publish_datetime
		)
		VALUES(
		#{code}
		,#{title}
		,#{content}
		,#{pic}
		,#{status}
		
		,#{plateCode}
		,#{publisher}
		,#{publishDatetime}
		)
	</insert>
	
	<update id="update_post" parameterType="post">
		UPDATE tforum_post
		SET
		title = #{title}
		,content = #{content}
		,pic = #{pic}
		,plate_code = #{plateCode}
		,status = #{status}
		,publisher = #{publisher}
		WHERE code = #{code}
	</update>
	
	<delete id="delete_post" parameterType="post">
		DELETE FROM
		tforum_post
		WHERE
		code = #{code}
	</delete>
	
	<update id="update_post_approve" parameterType="post">
		UPDATE tforum_post
		SET
		approver = #{approver}
		,approve_datetime = #{approveDatetime}
		,approve_note = #{approveNote}
		,status = #{status}
		WHERE code = #{code}
	</update>
	
	<update id="update_post_status" parameterType="post">
		UPDATE tforum_post
		SET
		status = #{status}
		<if test="remark != null and remark != '' ">
				,remark = #{remark}
		</if>
		WHERE code = #{code}
	</update>
	
	<update id="update_post_location" parameterType="post">
		UPDATE tforum_post
		SET
		location = #{location}
		,valid_datetime_start = #{validDatetimeStart}
		,valid_datetime_end = #{validDatetimeEnd}
		WHERE code = #{code}
	</update>
	
	<update id="update_post_lock" parameterType="post">
		UPDATE tforum_post
		SET
		is_lock = #{isLock}
		WHERE code = #{code}
	</update>
	
	<update id="update_post_plate" parameterType="post">
		UPDATE tforum_post
		SET
		plate_code = #{plateCode}
		WHERE code = #{code}
	</update>
</mapper>
